{"ast":null,"code":"var _jsxFileName = \"/Users/garycai/Documents/Git Repository/ai-chat-app/frontend/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './ChatInterface.css';\nimport { sendChatMessage, fetchSessionHistory as fetchSessionsFromApi, deleteSession } from '../services/api';\nimport ReactMarkdown from 'react-markdown';\nimport ThemeToggle from './ThemeToggle';\nimport authService from '../services/authService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\n\n// First, create SVG components for each service with the same paths as the CSS\nconst OpenAIIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M18.5 12a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = OpenAIIcon;\nconst GeminiIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 1.5L9.5 9.5L1.5 12L9.5 14.5L12 22.5L14.5 14.5L22.5 12L14.5 9.5L12 1.5Z\",\n    fill: \"currentColor\",\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\",\n    strokeLinejoin: \"round\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n_c2 = GeminiIcon;\nconst KimiIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n    cx: \"12\",\n    cy: \"12\",\n    rx: \"10\",\n    ry: \"8\",\n    fill: \"currentColor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n    cx: \"8\",\n    cy: \"12\",\n    rx: \"2\",\n    ry: \"2.5\",\n    fill: \"white\",\n    filter: \"url(#glow)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n    cx: \"16\",\n    cy: \"12\",\n    rx: \"2\",\n    ry: \"2.5\",\n    fill: \"white\",\n    filter: \"url(#glow)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n    children: /*#__PURE__*/_jsxDEV(\"filter\", {\n      id: \"glow\",\n      x: \"-2\",\n      y: \"-2\",\n      width: \"28\",\n      height: \"28\",\n      children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n        stdDeviation: \"1\",\n        result: \"blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"feComposite\", {\n        in: \"SourceGraphic\",\n        in2: \"blur\",\n        operator: \"over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\n// Add Doubao icon component\n_c3 = KimiIcon;\nconst DoubaoIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    fill: \"currentColor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"8\",\n    cy: \"12\",\n    r: \"1\",\n    fill: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"16\",\n    cy: \"12\",\n    r: \"1\",\n    fill: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n\n// Update the serviceIcons mapping to use these SVG components\n_c4 = DoubaoIcon;\nconst serviceIcons = {\n  openai: /*#__PURE__*/_jsxDEV(OpenAIIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this),\n  gemini: /*#__PURE__*/_jsxDEV(GeminiIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this),\n  kimi: /*#__PURE__*/_jsxDEV(KimiIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 11\n  }, this),\n  doubao: /*#__PURE__*/_jsxDEV(DoubaoIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 13\n  }, this),\n  default: /*#__PURE__*/_jsxDEV(GeminiIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 14\n  }, this) // Using Gemini icon as default\n};\n\n// Add this new component for the welcome message\nconst WelcomeMessage = ({\n  username\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"welcome-message\",\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"welcome-text\",\n    children: [\"Hello, \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"username-text\",\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 5\n}, this);\n_c5 = WelcomeMessage;\nfunction ChatInterface() {\n  _s();\n  const serviceOptions = [{\n    value: 'gemini',\n    label: 'Gemini'\n  }, {\n    value: 'openai',\n    label: 'OpenAI'\n  }, {\n    value: 'kimi',\n    label: 'Kimi'\n  }, {\n    value: 'doubao',\n    label: 'Doubao'\n  }];\n  const initialSessionCount = 5;\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [selectedService, setSelectedService] = useState('gemini');\n  const [sessionId, setSessionId] = useState(null);\n  const [sessionHistory, setSessionHistory] = useState([]);\n  const messageAreaRef = useRef(null);\n  const [isSessionListExpanded, setIsSessionListExpanded] = useState(false);\n  const [contextMenuSessionId, setContextMenuSessionId] = useState(null);\n  const [sessionBeingRenamedId, setSessionBeingRenamedId] = useState(null);\n  const [renameInputValue, setRenameInputValue] = useState('');\n  const renameInputRef = useRef(null);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const navigate = useNavigate();\n\n  // Add username state\n  const [username, setUsername] = useState('');\n\n  // Add this effect to load username when component mounts\n  useEffect(() => {\n    const currentUsername = authService.getCurrentUsername();\n    console.log('Current username:', currentUsername);\n    setUsername(currentUsername);\n  }, []);\n  useEffect(() => {\n    if (!authService.isAuthenticated()) {\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    document.title = 'Personal AI Chat';\n  }, []);\n  const handleRenameSession = sessionIdToRename => {\n    console.log(\"Rename action initiated for session ID:\", sessionIdToRename);\n    setSessionBeingRenamedId(sessionIdToRename);\n    closeContextMenu();\n  };\n  const handleRenameSessionSubmit = async (sessionIdToRename, newTitle) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/sessions/${sessionIdToRename}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authService.getToken()}`\n        },\n        body: JSON.stringify({\n          new_title: newTitle\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Update the session title in the local state\n      setSessionHistory(prevHistory => prevHistory.map(session => session.session_id === sessionIdToRename ? {\n        ...session,\n        session_title: data.new_title\n      } : session));\n\n      // Clear rename state\n      setSessionBeingRenamedId(null);\n      setRenameInputValue('');\n\n      // Refresh session list\n      await loadSessionHistoryData();\n    } catch (error) {\n      console.error(\"Error during session rename:\", error);\n      // Show error to user\n      setMessages(prev => [...prev, {\n        sender: 'system',\n        text: 'Error: Failed to rename session. Please try again.'\n      }]);\n    }\n  };\n  const handleRenameInputChange = event => {\n    setRenameInputValue(event.target.value);\n  };\n  const handleDeleteSession = async sessionId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/sessions/${sessionId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${authService.getToken()}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Refresh the session list\n      loadSessionHistoryData();\n\n      // If the deleted session was the current session, clear the messages\n      if (sessionId === sessionId) {\n        setMessages([]);\n        setSessionId(null);\n      }\n    } catch (error) {\n      console.error(\"Error deleting session:\", error);\n      // Show error message to user\n    }\n  };\n  const handleContextMenuClick = (event, sessionIdForMenu) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setContextMenuSessionId(sessionIdForMenu);\n  };\n  const closeContextMenu = useCallback(event => {\n    if (!event || !event.target.closest('.session-item-context-menu')) {\n      setContextMenuSessionId(null);\n    }\n  }, []);\n  useEffect(() => {\n    document.addEventListener('click', closeContextMenu);\n    return () => {\n      document.removeEventListener('click', closeContextMenu);\n    };\n  }, [closeContextMenu]);\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n    const newMessage = {\n      sender: 'user',\n      text: userInput\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setUserInput('');\n    const aiPlaceholder = {\n      sender: selectedService,\n      text: '',\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, aiPlaceholder]);\n    try {\n      const response = await sendChatMessage(userInput, selectedService, sessionId);\n      if (!response.ok) {\n        throw new Error('Failed to get AI response');\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let isFirstChunk = true;\n      let accumulatedText = '';\n      while (true) {\n        try {\n          const {\n            value,\n            done\n          } = await reader.read();\n          if (done) break;\n          const chunk = decoder.decode(value);\n          const lines = chunk.split('\\n');\n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              try {\n                const data = JSON.parse(line.slice(6));\n                if (data.done) {\n                  if (!sessionId && data.session_id) {\n                    setSessionId(data.session_id);\n                    loadSessionHistoryData();\n                  }\n                  setMessages(prev => prev.map((msg, i) => i === prev.length - 1 ? {\n                    ...msg,\n                    isStreaming: false\n                  } : msg));\n                  break;\n                } else if (data.text) {\n                  if (isFirstChunk) {\n                    isFirstChunk = false;\n                  }\n                  accumulatedText += data.text;\n                  setMessages(prev => {\n                    const newMessages = [...prev];\n                    const lastMessage = newMessages[newMessages.length - 1];\n                    if (lastMessage && lastMessage.isStreaming) {\n                      newMessages[newMessages.length - 1] = {\n                        ...lastMessage,\n                        text: accumulatedText,\n                        isStreaming: true\n                      };\n                    }\n                    return newMessages;\n                  });\n                }\n              } catch (e) {\n                console.error('Error parsing SSE data:', e);\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Error reading stream:', error);\n          break;\n        }\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        authService.logout();\n        navigate('/login');\n      }\n      setMessages(prev => prev.filter(msg => !msg.isStreaming));\n      // Show error message to user\n      setMessages(prev => [...prev.filter(msg => !msg.isStreaming), {\n        sender: 'system',\n        text: 'Error: Failed to get AI response. Please try again.'\n      }]);\n    }\n  };\n  const loadSessionMessages = async sessionIdToLoad => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/sessions/${sessionIdToLoad}/messages`, {\n        headers: {\n          'Authorization': `Bearer ${authService.getToken()}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          authService.logout();\n          navigate('/login');\n          return;\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const session = sessionHistory.find(s => s.session_id === sessionIdToLoad);\n      if (session && session.service_provider) {\n        setSelectedService(session.service_provider);\n      }\n      setMessages(data);\n      setSessionId(sessionIdToLoad);\n    } catch (error) {\n      console.error(\"Error fetching session messages:\", error);\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setSessionId(null);\n    setUserInput('');\n  };\n  const handleShowMoreSessions = () => {\n    setIsSessionListExpanded(true);\n  };\n  const handleShowLessSessions = () => {\n    setIsSessionListExpanded(false);\n  };\n  useEffect(() => {\n    if (messageAreaRef.current) {\n      messageAreaRef.current.scrollTop = messageAreaRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const loadSessionHistoryData = async () => {\n    try {\n      const data = await fetchSessionsFromApi();\n      setSessionHistory(data);\n    } catch (error) {\n      console.error(\"Error fetching session history:\", error);\n    }\n  };\n  useEffect(() => {\n    loadSessionHistoryData();\n  }, []);\n  useEffect(() => {\n    const handleClickOutsideRename = event => {\n      if (sessionBeingRenamedId) {\n        const clickedElement = event.target;\n        const renameInput = renameInputRef.current;\n        const currentSessionItem = renameInput === null || renameInput === void 0 ? void 0 : renameInput.closest('.session-list-item');\n        if (renameInput && !renameInput.contains(clickedElement)) {\n          const clickedSessionItem = clickedElement.closest('.session-list-item');\n          if (clickedSessionItem && clickedSessionItem !== currentSessionItem) {\n            setSessionBeingRenamedId(null);\n            setRenameInputValue('');\n            console.log(\"Rename cancelled due to click on a different session.\");\n          }\n        }\n      }\n    };\n    const handleEscapeKeyCancel = event => {\n      if (sessionBeingRenamedId && event.key === 'Escape') {\n        setSessionBeingRenamedId(null);\n        setRenameInputValue('');\n        console.log(\"Rename cancelled due to Escape key press.\");\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutsideRename);\n    document.addEventListener('keydown', handleEscapeKeyCancel);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideRename);\n      document.removeEventListener('keydown', handleEscapeKeyCancel);\n    };\n  }, [sessionBeingRenamedId]);\n  const handleThemeToggle = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', isDarkTheme ? 'dark' : 'light');\n  }, [isDarkTheme]);\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n  useEffect(() => {\n    if (sessionId) {\n      loadSessionHistoryData();\n    }\n  }, [sessionId]);\n  const TypingIndicator = () => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: \"\\u258A\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 9\n  }, this);\n  const handleLogout = () => {\n    authService.logout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-toggle\",\n      onClick: toggleSidebar,\n      \"aria-label\": \"Toggle sidebar\",\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `chat-sidebar ${isSidebarVisible ? 'show' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-button\",\n          onClick: handleNewChat,\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"session-history-header\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"session-list\",\n          children: [sessionHistory && sessionHistory.slice(0, isSessionListExpanded ? undefined : initialSessionCount).map(sessionItem => {\n            var _sessionItem$service_, _sessionItem$service_2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"session-list-item\",\n              onClick: () => loadSessionMessages(sessionItem.session_id),\n              children: [sessionBeingRenamedId === sessionItem.session_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"session-rename-input\",\n                value: renameInputValue,\n                onChange: handleRenameInputChange,\n                onKeyDown: event => {\n                  if (event.key === 'Enter') {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    handleRenameSessionSubmit(sessionItem.session_id, renameInputValue);\n                  }\n                },\n                onClick: e => e.stopPropagation(),\n                ref: renameInputRef,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"session-title\",\n                \"data-service\": (_sessionItem$service_ = sessionItem.service_provider) === null || _sessionItem$service_ === void 0 ? void 0 : _sessionItem$service_.toLowerCase(),\n                children: [serviceIcons[(_sessionItem$service_2 = sessionItem.service_provider) === null || _sessionItem$service_2 === void 0 ? void 0 : _sessionItem$service_2.toLowerCase()] || serviceIcons.default, \"\\xA0\\xA0\\xA0\\xA0\", sessionItem.session_title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `session-item-context-menu-icon ${contextMenuSessionId === sessionItem.session_id ? 'active' : ''}`,\n                onClick: e => handleContextMenuClick(e, sessionItem.session_id),\n                title: \"More options\",\n                children: \"\\u2026\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 37\n              }, this), contextMenuSessionId === sessionItem.session_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-item-context-menu\",\n                onClick: e => e.stopPropagation(),\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"session-context-menu-button\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleRenameSession(sessionItem.session_id);\n                    setRenameInputValue(sessionItem.session_title);\n                  },\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"session-context-menu-button session-context-delete-button\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteSession(sessionItem.session_id);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 41\n              }, this)]\n            }, sessionItem.session_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 33\n            }, this);\n          }), sessionHistory && sessionHistory.length > initialSessionCount && (!isSessionListExpanded ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowMoreSessions,\n            className: \"session-history-more-button\",\n            children: [\"More \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow-icon\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowLessSessions,\n            className: \"session-history-less-button\",\n            children: [\"Less \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow-icon\",\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n          isDark: isDarkTheme,\n          onToggle: handleThemeToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: [\"Logout (\", username, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-selection\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"service-select-main-area\",\n          className: \"service-select\",\n          value: selectedService,\n          onChange: event => {\n            setMessages([]);\n            setSelectedService(event.target.value);\n          },\n          children: serviceOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-display-area\",\n          ref: messageAreaRef,\n          children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n            username: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === 'user' ? 'user' : msg.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 41\n              }, this), msg.isStreaming && /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"chat-input\",\n            placeholder: \"Type your message...\",\n            value: userInput,\n            onChange: handleInputChange,\n            onKeyDown: event => {\n              if (event.key === 'Enter' && !event.shiftKey) {\n                event.preventDefault();\n                handleSendMessage();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInterface, \"hby9+kZUxMo0PbhZhLnAiuLafdI=\", false, function () {\n  return [useNavigate];\n});\n_c6 = ChatInterface;\nexport default ChatInterface;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"OpenAIIcon\");\n$RefreshReg$(_c2, \"GeminiIcon\");\n$RefreshReg$(_c3, \"KimiIcon\");\n$RefreshReg$(_c4, \"DoubaoIcon\");\n$RefreshReg$(_c5, \"WelcomeMessage\");\n$RefreshReg$(_c6, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","sendChatMessage","fetchSessionHistory","fetchSessionsFromApi","deleteSession","ReactMarkdown","ThemeToggle","authService","useNavigate","jsxDEV","_jsxDEV","API_BASE_URL","OpenAIIcon","width","height","viewBox","fill","xmlns","children","d","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","GeminiIcon","strokeLinejoin","_c2","KimiIcon","cx","cy","rx","ry","filter","id","x","y","stdDeviation","result","in","in2","operator","_c3","DoubaoIcon","r","_c4","serviceIcons","openai","gemini","kimi","doubao","default","WelcomeMessage","username","className","_c5","ChatInterface","_s","serviceOptions","value","label","initialSessionCount","messages","setMessages","userInput","setUserInput","selectedService","setSelectedService","sessionId","setSessionId","sessionHistory","setSessionHistory","messageAreaRef","isSessionListExpanded","setIsSessionListExpanded","contextMenuSessionId","setContextMenuSessionId","sessionBeingRenamedId","setSessionBeingRenamedId","renameInputValue","setRenameInputValue","renameInputRef","isDarkTheme","setIsDarkTheme","isSidebarVisible","setIsSidebarVisible","navigate","setUsername","currentUsername","getCurrentUsername","console","log","isAuthenticated","document","title","handleRenameSession","sessionIdToRename","closeContextMenu","handleRenameSessionSubmit","newTitle","response","fetch","method","headers","getToken","body","JSON","stringify","new_title","ok","Error","status","data","json","prevHistory","map","session","session_id","session_title","loadSessionHistoryData","error","prev","sender","text","handleRenameInputChange","event","target","handleDeleteSession","handleContextMenuClick","sessionIdForMenu","preventDefault","stopPropagation","closest","addEventListener","removeEventListener","handleInputChange","handleSendMessage","trim","newMessage","aiPlaceholder","isStreaming","reader","getReader","decoder","TextDecoder","isFirstChunk","accumulatedText","done","read","chunk","decode","lines","split","line","startsWith","parse","slice","msg","i","length","newMessages","lastMessage","e","_error$response","logout","loadSessionMessages","sessionIdToLoad","find","s","service_provider","handleNewChat","handleShowMoreSessions","handleShowLessSessions","current","scrollTop","scrollHeight","handleClickOutsideRename","clickedElement","renameInput","currentSessionItem","contains","clickedSessionItem","handleEscapeKeyCancel","key","handleThemeToggle","documentElement","setAttribute","toggleSidebar","TypingIndicator","handleLogout","onClick","undefined","sessionItem","_sessionItem$service_","_sessionItem$service_2","type","onChange","onKeyDown","ref","autoFocus","toLowerCase","isDark","onToggle","option","index","placeholder","shiftKey","_c6","$RefreshReg$"],"sources":["/Users/garycai/Documents/Git Repository/ai-chat-app/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './ChatInterface.css';\nimport { sendChatMessage, fetchSessionHistory as fetchSessionsFromApi, deleteSession } from '../services/api';\nimport ReactMarkdown from 'react-markdown'; \nimport ThemeToggle from './ThemeToggle';\nimport authService from '../services/authService';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\n// First, create SVG components for each service with the same paths as the CSS\nconst OpenAIIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M18.5 12a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n  </svg>\n);\n\nconst GeminiIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 1.5L9.5 9.5L1.5 12L9.5 14.5L12 22.5L14.5 14.5L22.5 12L14.5 9.5L12 1.5Z\" \n          fill=\"currentColor\" \n          stroke=\"currentColor\" \n          strokeWidth=\"1.5\" \n          strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst KimiIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    {/* Main oval face */}\n    <ellipse \n      cx=\"12\" \n      cy=\"12\" \n      rx=\"10\" \n      ry=\"8\" \n      fill=\"currentColor\"\n    />\n    {/* Left eye */}\n    <ellipse \n      cx=\"8\" \n      cy=\"12\" \n      rx=\"2\" \n      ry=\"2.5\" \n      fill=\"white\"\n      filter=\"url(#glow)\"\n    />\n    {/* Right eye */}\n    <ellipse \n      cx=\"16\" \n      cy=\"12\" \n      rx=\"2\" \n      ry=\"2.5\" \n      fill=\"white\"\n      filter=\"url(#glow)\"\n    />\n    {/* Add glow effect */}\n    <defs>\n      <filter id=\"glow\" x=\"-2\" y=\"-2\" width=\"28\" height=\"28\">\n        <feGaussianBlur stdDeviation=\"1\" result=\"blur\"/>\n        <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>\n      </filter>\n    </defs>\n  </svg>\n);\n\n// Add Doubao icon component\nconst DoubaoIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    {/* Face shape - orange circle */}\n    <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"currentColor\"/>\n    {/* Eyes - simple dots */}\n    <circle cx=\"8\" cy=\"12\" r=\"1\" fill=\"white\"/>\n    <circle cx=\"16\" cy=\"12\" r=\"1\" fill=\"white\"/>\n  </svg>\n);\n\n// Update the serviceIcons mapping to use these SVG components\nconst serviceIcons = {\n    openai: <OpenAIIcon />,\n    gemini: <GeminiIcon />,\n    kimi: <KimiIcon />,\n    doubao: <DoubaoIcon />,\n    default: <GeminiIcon /> // Using Gemini icon as default\n};\n\n// Add this new component for the welcome message\nconst WelcomeMessage = ({ username }) => (\n    <div className=\"welcome-message\">\n        <span className=\"welcome-text\">Hello, <span className=\"username-text\">{username}</span></span>\n    </div>\n);\n\nfunction ChatInterface() {\n    const serviceOptions = [\n        { value: 'gemini', label: 'Gemini' },\n        { value: 'openai', label: 'OpenAI' },\n        { value: 'kimi', label: 'Kimi' },\n        { value: 'doubao', label: 'Doubao' },\n    ];\n    \n    const initialSessionCount = 5;\n    \n    const [messages, setMessages] = useState([]);\n    const [userInput, setUserInput] = useState('');\n    const [selectedService, setSelectedService] = useState('gemini');\n    const [sessionId, setSessionId] = useState(null);\n    const [sessionHistory, setSessionHistory] = useState([]); \n    const messageAreaRef = useRef(null);\n    const [isSessionListExpanded, setIsSessionListExpanded] = useState(false);\n    const [contextMenuSessionId, setContextMenuSessionId] = useState(null); \n    const [sessionBeingRenamedId, setSessionBeingRenamedId] = useState(null);\n    const [renameInputValue, setRenameInputValue] = useState('');\n    const renameInputRef = useRef(null); \n\n    const [isDarkTheme, setIsDarkTheme] = useState(false);\n    const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n\n    const navigate = useNavigate();\n\n    // Add username state\n    const [username, setUsername] = useState('');\n    \n    // Add this effect to load username when component mounts\n    useEffect(() => {\n        const currentUsername = authService.getCurrentUsername();\n        console.log('Current username:', currentUsername);\n        setUsername(currentUsername);\n    }, []);\n\n    useEffect(() => {\n        if (!authService.isAuthenticated()) {\n            navigate('/login');\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        document.title = 'Personal AI Chat';\n    }, []);\n\n    const handleRenameSession = (sessionIdToRename) => {\n        console.log(\"Rename action initiated for session ID:\", sessionIdToRename);\n        setSessionBeingRenamedId(sessionIdToRename);\n        closeContextMenu();\n    };\n    \n    const handleRenameSessionSubmit = async (sessionIdToRename, newTitle) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/sessions/${sessionIdToRename}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${authService.getToken()}`\n                },\n                body: JSON.stringify({ new_title: newTitle }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            // Update the session title in the local state\n            setSessionHistory(prevHistory => \n                prevHistory.map(session => \n                    session.session_id === sessionIdToRename \n                        ? { ...session, session_title: data.new_title }\n                        : session\n                )\n            );\n\n            // Clear rename state\n            setSessionBeingRenamedId(null);\n            setRenameInputValue('');\n            \n            // Refresh session list\n            await loadSessionHistoryData();\n\n        } catch (error) {\n            console.error(\"Error during session rename:\", error);\n            // Show error to user\n            setMessages(prev => [...prev, \n                { sender: 'system', text: 'Error: Failed to rename session. Please try again.' }\n            ]);\n        }\n    };\n\n    const handleRenameInputChange = (event) => {\n        setRenameInputValue(event.target.value);\n    };\n\n    const handleDeleteSession = async (sessionId) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/sessions/${sessionId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${authService.getToken()}`\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            // Refresh the session list\n            loadSessionHistoryData();\n            \n            // If the deleted session was the current session, clear the messages\n            if (sessionId === sessionId) {\n                setMessages([]);\n                setSessionId(null);\n            }\n            \n        } catch (error) {\n            console.error(\"Error deleting session:\", error);\n            // Show error message to user\n        }\n    };\n\n    const handleContextMenuClick = (event, sessionIdForMenu) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextMenuSessionId(sessionIdForMenu);\n    };\n\n    const closeContextMenu = useCallback((event) => {\n        if (!event || !event.target.closest('.session-item-context-menu')) {\n            setContextMenuSessionId(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        document.addEventListener('click', closeContextMenu);\n        return () => {\n            document.removeEventListener('click', closeContextMenu);\n        };\n    }, [closeContextMenu]);\n\n    const handleInputChange = (event) => {\n        setUserInput(event.target.value);\n    };\n\n    const handleSendMessage = async () => {\n        if (!userInput.trim()) return;\n\n        const newMessage = { sender: 'user', text: userInput };\n        setMessages(prev => [...prev, newMessage]);\n        setUserInput('');\n\n        const aiPlaceholder = { sender: selectedService, text: '', isStreaming: true };\n        setMessages(prev => [...prev, aiPlaceholder]);\n\n        try {\n            const response = await sendChatMessage(userInput, selectedService, sessionId);\n            \n            if (!response.ok) {\n                throw new Error('Failed to get AI response');\n            }\n\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            let isFirstChunk = true;\n            let accumulatedText = '';\n\n            while (true) {\n                try {\n                    const { value, done } = await reader.read();\n                    if (done) break;\n\n                    const chunk = decoder.decode(value);\n                    const lines = chunk.split('\\n');\n\n                    for (const line of lines) {\n                        if (line.startsWith('data: ')) {\n                            try {\n                                const data = JSON.parse(line.slice(6));\n                                if (data.done) {\n                                    if (!sessionId && data.session_id) {\n                                        setSessionId(data.session_id);\n                                        loadSessionHistoryData();\n                                    }\n                                    setMessages(prev => prev.map((msg, i) => \n                                        i === prev.length - 1 \n                                            ? { ...msg, isStreaming: false }\n                                            : msg\n                                    ));\n                                    break;\n                                } else if (data.text) {\n                                    if (isFirstChunk) {\n                                        isFirstChunk = false;\n                                    }\n                                    accumulatedText += data.text;\n                                    setMessages(prev => {\n                                        const newMessages = [...prev];\n                                        const lastMessage = newMessages[newMessages.length - 1];\n                                        if (lastMessage && lastMessage.isStreaming) {\n                                            newMessages[newMessages.length - 1] = {\n                                                ...lastMessage,\n                                                text: accumulatedText,\n                                                isStreaming: true\n                                            };\n                                        }\n                                        return newMessages;\n                                    });\n                                }\n                            } catch (e) {\n                                console.error('Error parsing SSE data:', e);\n                            }\n                        }\n                    }\n                } catch (error) {\n                    console.error('Error reading stream:', error);\n                    break;\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            if (error.response?.status === 401) {\n                authService.logout();\n                navigate('/login');\n            }\n            setMessages(prev => prev.filter(msg => !msg.isStreaming));\n            // Show error message to user\n            setMessages(prev => [...prev.filter(msg => !msg.isStreaming), \n                { sender: 'system', text: 'Error: Failed to get AI response. Please try again.' }\n            ]);\n        }\n    };\n\n    const loadSessionMessages = async (sessionIdToLoad) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/sessions/${sessionIdToLoad}/messages`, {\n                headers: {\n                    'Authorization': `Bearer ${authService.getToken()}`\n                }\n            });\n            if (!response.ok) {\n                if (response.status === 401) {\n                    authService.logout();\n                    navigate('/login');\n                    return;\n                }\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            \n            const session = sessionHistory.find(s => s.session_id === sessionIdToLoad);\n            if (session && session.service_provider) {\n                setSelectedService(session.service_provider);\n            }\n            \n            setMessages(data);\n            setSessionId(sessionIdToLoad);\n        } catch (error) {\n            console.error(\"Error fetching session messages:\", error);\n        }\n    };\n   \n    const handleNewChat = () => {\n        setMessages([]);\n        setSessionId(null);\n        setUserInput('');\n    };\n\n    const handleShowMoreSessions = () => {\n        setIsSessionListExpanded(true);\n    };\n\n    const handleShowLessSessions = () => {\n        setIsSessionListExpanded(false);\n    };\n\n    useEffect(() => {\n        if (messageAreaRef.current) {\n            messageAreaRef.current.scrollTop = messageAreaRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    const loadSessionHistoryData = async () => {\n        try {\n            const data = await fetchSessionsFromApi();\n            setSessionHistory(data);\n        } catch (error) {\n            console.error(\"Error fetching session history:\", error);\n        }\n    };\n\n    useEffect(() => {\n        loadSessionHistoryData();\n    }, []);\n\n    useEffect(() => {\n        const handleClickOutsideRename = (event) => {\n            if (sessionBeingRenamedId) {\n                const clickedElement = event.target;\n                const renameInput = renameInputRef.current;\n                const currentSessionItem = renameInput?.closest('.session-list-item');\n    \n                if (renameInput && !renameInput.contains(clickedElement)) {\n                    const clickedSessionItem = clickedElement.closest('.session-list-item');\n    \n                    if (clickedSessionItem && clickedSessionItem !== currentSessionItem) {\n                        setSessionBeingRenamedId(null);\n                        setRenameInputValue('');\n                        console.log(\"Rename cancelled due to click on a different session.\");\n                    }\n                }\n            }\n        };\n\n        const handleEscapeKeyCancel = (event) => {\n            if (sessionBeingRenamedId && event.key === 'Escape') {\n                setSessionBeingRenamedId(null);\n                setRenameInputValue('');\n                console.log(\"Rename cancelled due to Escape key press.\");\n            }\n        };\n    \n        document.addEventListener('mousedown', handleClickOutsideRename);\n        document.addEventListener('keydown', handleEscapeKeyCancel);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutsideRename);\n            document.removeEventListener('keydown', handleEscapeKeyCancel);\n        };\n    }, [sessionBeingRenamedId]);\n    \n    const handleThemeToggle = () => {\n        setIsDarkTheme(!isDarkTheme);\n    };\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', isDarkTheme ? 'dark' : 'light');\n    }, [isDarkTheme]);\n\n    const toggleSidebar = () => {\n        setIsSidebarVisible(!isSidebarVisible);\n    };\n\n    useEffect(() => {\n        if (sessionId) {\n            loadSessionHistoryData();\n        }\n    }, [sessionId]);\n\n    const TypingIndicator = () => (\n        <span className=\"typing-indicator\">▊</span>\n    );\n\n    const handleLogout = () => {\n        authService.logout();\n        navigate('/login');\n    };\n\n    return (\n        <div className=\"chat-interface-container\">\n            <button \n                className=\"sidebar-toggle\" \n                onClick={toggleSidebar}\n                aria-label=\"Toggle sidebar\"\n            >\n                ☰\n            </button>\n\n            <aside className={`chat-sidebar ${isSidebarVisible ? 'show' : ''}`}>\n                <div className=\"sidebar-header\">\n                    <button className=\"new-chat-button\" onClick={handleNewChat}>\n                        + New Chat\n                    </button>\n                </div>\n                <div className=\"session-history\">\n                    <h3 className='session-history-header'>RECENT</h3>\n                    <ul className=\"session-list\">\n                        {sessionHistory && sessionHistory\n                            .slice(0, isSessionListExpanded ? undefined : initialSessionCount)\n                            .map(sessionItem => (\n                                <li\n                                    key={sessionItem.session_id}\n                                    className=\"session-list-item\"\n                                    onClick={() => loadSessionMessages(sessionItem.session_id)}\n                                >\n                                    {sessionBeingRenamedId === sessionItem.session_id ? (\n                                        <input\n                                            type=\"text\"\n                                            className=\"session-rename-input\"\n                                            value={renameInputValue}\n                                            onChange={handleRenameInputChange}\n                                            onKeyDown={(event) => {\n                                                if (event.key === 'Enter') {\n                                                    event.preventDefault();\n                                                    event.stopPropagation();\n                                                    handleRenameSessionSubmit(sessionItem.session_id, renameInputValue);\n                                                }\n                                            }}\n                                            onClick={(e) => e.stopPropagation()}\n                                            ref={renameInputRef}\n                                            autoFocus\n                                        />\n                                    ) : (\n                                        <span \n                                            className=\"session-title\"\n                                            data-service={sessionItem.service_provider?.toLowerCase()}\n                                        >\n                                            {serviceIcons[sessionItem.service_provider?.toLowerCase()] || serviceIcons.default}\n                                            &nbsp;&nbsp;&nbsp;&nbsp;{sessionItem.session_title}\n                                        </span>\n                                    )}\n                                    \n                                    <button\n                                        className={`session-item-context-menu-icon ${\n                                            contextMenuSessionId === sessionItem.session_id ? 'active' : ''\n                                        }`}\n                                        onClick={(e) => handleContextMenuClick(e, sessionItem.session_id)}\n                                        title=\"More options\"\n                                    >\n                                        &#8230;\n                                    </button>\n\n                                    {contextMenuSessionId === sessionItem.session_id && (\n                                        <div \n                                            className=\"session-item-context-menu\"\n                                            onClick={(e) => e.stopPropagation()}\n                                        >\n                                            <button\n                                                className=\"session-context-menu-button\"\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    handleRenameSession(sessionItem.session_id);\n                                                    setRenameInputValue(sessionItem.session_title);\n                                                }}\n                                            >\n                                                Rename\n                                            </button>\n                                            <button\n                                                className=\"session-context-menu-button session-context-delete-button\"\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    handleDeleteSession(sessionItem.session_id);\n                                                }}\n                                            >\n                                                Delete\n                                            </button>\n                                        </div>\n                                    )}\n                                </li>\n                            ))}\n                        {sessionHistory && sessionHistory.length > initialSessionCount && (\n                            !isSessionListExpanded ? (\n                                <button onClick={handleShowMoreSessions} className=\"session-history-more-button\">\n                                    More <span className=\"arrow-icon\">&#9660;</span>\n                                </button>\n                            ) : (\n                                <button onClick={handleShowLessSessions} className=\"session-history-less-button\">\n                                    Less <span className=\"arrow-icon\">&#9650;</span>\n                                </button>\n                            )\n                        )}\n                    </ul>\n                </div>\n                \n                <div className=\"sidebar-footer\">\n                    <ThemeToggle \n                        isDark={isDarkTheme}\n                        onToggle={handleThemeToggle}\n                    />\n                    <button className=\"logout-button\" onClick={handleLogout}>\n                        Logout ({username})\n                    </button>\n                </div>\n            </aside>\n            <div className=\"chat-content\">\n                <div className=\"service-selection\">\n                    <select\n                        id=\"service-select-main-area\"\n                        className=\"service-select\"\n                        value={selectedService}\n                        onChange={(event) => {\n                            setMessages([]);\n                            setSelectedService(event.target.value);\n                        }}\n                    >\n                        {serviceOptions.map((option) => (\n                            <option key={option.value} value={option.value}>\n                                {option.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <main className=\"main-chat-area\">\n                    <div className=\"message-display-area\" ref={messageAreaRef}>\n                        {messages.length === 0 ? (\n                            <WelcomeMessage username={username} />\n                        ) : (\n                            messages.map((msg, index) => (\n                                <div \n                                    key={index} \n                                    className={`message ${msg.sender === 'user' ? 'user' : msg.sender}`}\n                                >\n                                    <div className=\"message-content\">\n                                        <ReactMarkdown>\n                                            {msg.text}\n                                        </ReactMarkdown>\n                                        {msg.isStreaming && <TypingIndicator />}\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n                    <div className=\"input-area\">\n                        <textarea\n                            className=\"chat-input\"\n                            placeholder=\"Type your message...\"\n                            value={userInput}\n                            onChange={handleInputChange}\n                            onKeyDown={(event) => {\n                                if (event.key === 'Enter' && !event.shiftKey) {\n                                    event.preventDefault();\n                                    handleSendMessage();\n                                }\n                            }}\n                        />\n                        <button className=\"send-button\" onClick={handleSendMessage}>Send</button>\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}