{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nclass AuthService {\n  async login(email, password) {\n    const formData = new FormData();\n    formData.append('username', email);\n    formData.append('password', password);\n    try {\n      const response = await axios.post(`${API_URL}/token`, formData);\n      console.log('Full login response:', response);\n      console.log('Login response data:', response.data);\n      console.log('Username from response:', response.data.username);\n      if (response.data.access_token) {\n        // Store token and user info\n        const userData = {\n          access_token: response.data.access_token,\n          email: email,\n          username: response.data.username // Remove the fallback to email\n        };\n        console.log('Storing user data:', userData);\n        localStorage.setItem('user', JSON.stringify(userData));\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }\n  async register(username, email, password) {\n    try {\n      const response = await axios.post(`${API_URL}/register`, {\n        username,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        throw new Error(error.response.data.detail || 'Registration failed');\n      } else if (error.request) {\n        // The request was made but no response was received\n        throw new Error('No response from server');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        throw new Error('Error setting up the request');\n      }\n    }\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  getToken() {\n    const user = this.getCurrentUser();\n    return user === null || user === void 0 ? void 0 : user.access_token;\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  getCurrentUsername() {\n    const user = this.getCurrentUser();\n    console.log('Full user data from storage:', user);\n    if (!user) return '';\n\n    // Simply return the username\n    return user.username || 'User';\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","email","password","formData","FormData","append","response","post","console","log","data","username","access_token","userData","localStorage","setItem","JSON","stringify","error","register","headers","Error","detail","request","logout","removeItem","getCurrentUser","parse","getItem","getToken","user","isAuthenticated","getCurrentUsername"],"sources":["/Users/garycai/Documents/Git Repository/ai-chat-app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\nclass AuthService {\n    async login(email, password) {\n        const formData = new FormData();\n        formData.append('username', email);\n        formData.append('password', password);\n\n        try {\n            const response = await axios.post(`${API_URL}/token`, formData);\n            console.log('Full login response:', response);\n            console.log('Login response data:', response.data);\n            console.log('Username from response:', response.data.username);\n\n            if (response.data.access_token) {\n                // Store token and user info\n                const userData = {\n                    access_token: response.data.access_token,\n                    email: email,\n                    username: response.data.username // Remove the fallback to email\n                };\n                console.log('Storing user data:', userData);\n                localStorage.setItem('user', JSON.stringify(userData));\n            }\n            return response.data;\n        } catch (error) {\n            console.error('Login error:', error);\n            throw error;\n        }\n    }\n\n    async register(username, email, password) {\n        try {\n            const response = await axios.post(`${API_URL}/register`, {\n                username,\n                email,\n                password\n            }, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            return response.data;\n        } catch (error) {\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                throw new Error(error.response.data.detail || 'Registration failed');\n            } else if (error.request) {\n                // The request was made but no response was received\n                throw new Error('No response from server');\n            } else {\n                // Something happened in setting up the request that triggered an Error\n                throw new Error('Error setting up the request');\n            }\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    getToken() {\n        const user = this.getCurrentUser();\n        return user?.access_token;\n    }\n\n    isAuthenticated() {\n        return !!this.getToken();\n    }\n\n    getCurrentUsername() {\n        const user = this.getCurrentUser();\n        console.log('Full user data from storage:', user);\n        \n        if (!user) return '';\n        \n        // Simply return the username\n        return user.username || 'User';\n    }\n}\n\nexport default new AuthService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}